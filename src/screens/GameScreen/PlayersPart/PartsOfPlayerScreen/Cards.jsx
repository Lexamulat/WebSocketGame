import React from 'react';
import ReactDOM from 'react-dom'
import ioConn from '../../../../socket'

class Cards extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            mas: ["M12 6c-1.109 0-2 0.891-2 2v2h-0.5v-1.453c0-0.984-0.75-1.797-1.75-1.797-0.969 0-1.75 0.781-1.75 1.75v6.703l-0.5-0.469v-2.688c0-0.984-0.75-1.797-1.75-1.797-0.969 0-1.75 0.781-1.75 1.75v3.5c0 0.484 0.203 0.938 0.547 1.281l4.844 4.625c0.453 0.453 0.609 0.969 0.609 1.594 0 0.547 0.453 1 1 1h10c0.547 0 1-0.453 1-1v-0.391c0-0.406 0.047-0.812 0.156-1.203l1.687-6.813c0.109-0.391 0.156-0.797 0.156-1.203v-3.844c0-0.984-0.75-1.797-1.75-1.797-0.969 0-1.75 0.781-1.75 1.75v0.5h-0.5v-1.953c0-0.828-0.562-1.594-1.391-1.766-0.109-0.016-0.234-0.031-0.359-0.031-0.969 0-1.75 0.781-1.75 1.75v2h-0.5v-1.906c0-1.047-0.75-1.969-1.797-2.078-0.078-0.016-0.141-0.016-0.203-0.016zM12 4c0.844 0 1.656 0.266 2.328 0.781 0.578-0.344 1.25-0.531 1.922-0.531 1.234 0 2.375 0.594 3.078 1.609 0.297-0.078 0.609-0.109 0.922-0.109 2.094 0 3.75 1.719 3.75 3.797v3.844c0 0.562-0.078 1.141-0.203 1.687l-1.703 6.813c-0.094 0.375-0.094 0.734-0.094 1.109 0 1.656-1.344 3-3 3h-10c-1.781 0-3-1.422-3-3.141l-4.813-4.625c-0.734-0.703-1.188-1.703-1.188-2.734v-3.5c0-2.063 1.687-3.75 3.75-3.75 0.094 0 0.172 0 0.25 0.016 0.125-1.984 1.781-3.516 3.75-3.516 0.531 0 1.047 0.109 1.531 0.328 0.734-0.703 1.703-1.078 2.719-1.078z",
            "M16.766 26h-2.766c-1.625 0-2.859-0.703-3.531-2.203-0.234-0.5-0.359-1.047-0.359-1.594v-0.078c-1.281-0.625-2.109-1.937-2.109-3.375 0-0.172 0-0.594 0.078-0.75h-4.078c-2.203 0-4-1.797-4-4s1.797-4 4-4h1.766l-0.688-0.266c-1.547-0.578-2.578-2.078-2.578-3.734 0-2.203 1.797-4 4-4 0.484 0 0.969 0.094 1.422 0.266l9.812 3.734h6.266c2.203 0 4 1.797 4 4v10.437c0 1.844-1.25 3.437-3.031 3.875l-5.297 1.328c-0.938 0.234-1.922 0.359-2.906 0.359zM16 14.891l-2.422 1.109-2.547 1.156c-0.625 0.281-1.031 0.906-1.031 1.594 0 0.969 0.781 1.75 1.75 1.75 0.25 0 0.5-0.047 0.719-0.156l5.281-2.406c-1.016-0.219-1.75-1.141-1.75-2.188v-0.859zM21 19.75c0-0.969-0.781-1.75-1.75-1.75-0.25 0-0.5 0.047-0.719 0.156l-4.531 2.063c-0.938 0.422-1.891 0.797-1.891 1.984 0 1.031 0.719 1.781 1.766 1.781 0.187 0 0.438-0.063 0.594-0.141l5.5-2.5c0.625-0.281 1.031-0.906 1.031-1.594zM17.375 8l-10.156-3.875c-0.234-0.078-0.469-0.125-0.719-0.125-1.094 0-2 0.891-2 2 0 0.828 0.516 1.578 1.281 1.875l8.219 3.125v1h-10c-1.109 0-2 0.891-2 2s0.891 2 2 2h8.359l3.641-1.656v-3.094c0-0.625 0.266-1.234 0.719-1.656l1.734-1.594h-1.078zM16.766 24c0.812 0 1.641-0.094 2.422-0.297l5.297-1.328c0.891-0.219 1.516-1.016 1.516-1.937v-10.437c0-1.109-0.891-2-2-2h-4.813l-2.125 1.969c-0.359 0.328-0.562 0.797-0.562 1.281v4.625c0 0.969 0.797 1.687 1.75 1.687 0.969 0 1.75-0.859 1.75-1.813v-3.25h0.5v3.25c0 0.703-0.344 1.359-0.891 1.781 1.094 0.172 1.891 1.125 1.891 2.219 0 0.875-0.516 1.687-1.313 2.047l-4.844 2.203h1.422z", 
                "M13.75 2c-0.969 0-1.75 0.781-1.75 1.75v10.25h-0.5v-8.25c0-0.969-0.781-1.75-1.75-1.75s-1.75 0.781-1.75 1.75v12.25l-2.406-3.203c-0.375-0.5-0.969-0.797-1.594-0.797-1.109 0-2 0.906-2 2 0 0.438 0.141 0.859 0.406 1.203l6 8c0.375 0.5 0.969 0.797 1.594 0.797h10.75c0.719 0 1.344-0.516 1.484-1.219l1.188-6.328c0.047-0.297 0.078-0.609 0.078-0.922v-7.781c0-0.969-0.781-1.75-1.75-1.75s-1.75 0.781-1.75 1.75v4.25h-0.5v-8.25c0-0.969-0.781-1.75-1.75-1.75s-1.75 0.781-1.75 1.75v8.25h-0.5v-10.25c0-0.969-0.781-1.75-1.75-1.75zM13.75 0c1.406 0 2.703 0.797 3.344 2.063 0.219-0.047 0.438-0.063 0.656-0.063 2.063 0 3.75 1.687 3.75 3.75v0.266c2.172-0.125 4 1.547 4 3.734v7.781c0 0.438-0.047 0.875-0.125 1.297l-1.188 6.312c-0.297 1.656-1.75 2.859-3.437 2.859h-10.75c-1.25 0-2.453-0.609-3.203-1.594l-6-8c-0.516-0.688-0.797-1.547-0.797-2.406 0-2.203 1.781-4 4-4 0.656 0 1.453 0.156 2 0.531v-6.781c0-2.063 1.687-3.75 3.75-3.75 0.219 0 0.438 0.016 0.656 0.063 0.641-1.266 1.937-2.063 3.344-2.063z",
                "M17.984 0c1.266 0 2.484 0.609 3.234 1.641l8.937 12.203c1.203 1.625 1.844 3.578 1.844 5.609v5.547c0 1.656-1.344 3-3 3h-6c-1.656 0-3-1.344-3-3v-2.766l-4.469-2.234h-8.531c-1.656 0-3-1.344-3-3v-0.5c0-2.484 2.016-4.5 4.5-4.5h6.563l0.656-2h-10.719c-2.078 0-3.813-1.594-3.984-3.656-0.656-0.797-1.016-1.813-1.016-2.844v-0.5c0-1.656 1.344-3 3-3h14.984zM30 25v-5.547c0-1.578-0.516-3.156-1.453-4.438l-8.953-12.203c-0.375-0.5-0.969-0.812-1.609-0.812h-14.984c-0.547 0-1 0.453-1 1 0 0.828 0.016 1.406 0.562 2.078 0.203-0.641 0.781-1.078 1.437-1.078h13v0.5h-13c-0.547 0-1 0.453-1 1 0 0.297-0.016 0.609 0.047 0.906 0.172 0.922 1.016 1.594 1.953 1.594h11.422c0.828 0 1.5 0.672 1.5 1.5 0 0.156-0.031 0.328-0.078 0.469l-1 3c-0.203 0.609-0.781 1.031-1.422 1.031h-6.922c-1.375 0-2.5 1.125-2.5 2.5v0.5c0 0.547 0.453 1 1 1h8.766c0.156 0 0.313 0.031 0.453 0.109l4.953 2.469c0.5 0.266 0.828 0.781 0.828 1.344v3.078c0 0.547 0.453 1 1 1h6c0.547 0 1-0.453 1-1z",
                "M7.172 28c-1.609 0-3-1.094-3.391-2.656l-1.578-6.266c-0.125-0.547-0.203-1.125-0.203-1.687 0-0.359 0-0.703-0.078-1.047l-1.813-7.453c-0.078-0.297-0.109-0.594-0.109-0.891 0-1.937 1.469-3.531 3.391-3.734 0.344-1.766 1.859-3.016 3.672-3.016 1.734 0 3.234 1.188 3.641 2.875l1.297 5.437 1.609-6.687c0.406-1.687 1.906-2.875 3.641-2.875 1.859 0 3.391 1.344 3.687 3.156 1.922 0.219 3.313 1.844 3.313 3.766 0 0.297-0.047 0.609-0.109 0.922l-1.922 8c1.25-0.938 2.156-1.844 3.797-1.844 2.172 0 3.984 1.766 3.984 3.953 0 1.313-0.641 2.531-1.672 3.313l-7.922 5.938c-0.688 0.516-1.531 0.797-2.391 0.797h-10.844zM17.25 2c-0.797 0-1.5 0.562-1.687 1.344l-2.562 10.656h-1.984l-2.266-9.406c-0.187-0.781-0.891-1.344-1.687-1.344-1 0-1.75 0.797-1.75 1.766 0 0.156 0.016 0.297 0.047 0.438l2.063 8.547h-0.406l-1.547-6.375c-0.187-0.766-0.891-1.375-1.703-1.375-0.969 0-1.766 0.781-1.766 1.75 0 0.141 0.016 0.281 0.047 0.406l1.813 7.469c0.219 0.906 0.063 1.813 0.297 2.719l1.563 6.266c0.172 0.672 0.766 1.141 1.453 1.141h10.844c0.422 0 0.844-0.141 1.188-0.406l7.922-5.922c0.531-0.406 0.875-1.047 0.875-1.719 0-1.094-0.906-1.953-1.984-1.953-0.438 0-0.859 0.141-1.203 0.406l-4.797 3.594v-3.547c0-0.125 2.016-8.406 2.172-9.078 0.031-0.141 0.063-0.297 0.063-0.453 0-0.969-0.734-1.797-1.734-1.797-0.812 0-1.516 0.562-1.703 1.344l-1.813 7.531h-0.406l2.344-9.75c0.031-0.141 0.047-0.297 0.047-0.438 0-0.984-0.719-1.813-1.734-1.813z"  
            ],
            showBigCard:"false",
            screen: "duringTheGame",
            gameResult:"",
            yCard:0,
            opoonentCard:0

        }
        ioConn.on("gameEnd", (data) => {
            console.log("end of game")
                  return this.changeSreenToEndOfGame(data)
                })
        ioConn.on("yorOppenentLeavesTheGame", () => {
            console.log("yorOppenentLeavesTheGame")
                return this.leaveGame()
            })
    }
    changeNumOfCards() {
        this.setState({
            showBigCard: "true"
        })
      }

      repeatGame(){
        this.setState({
            showBigCard: "false"
        })
        ioConn.emit("RepeatGame");
      }

      leaveGame(){
        window.location.replace(document.location.href.substr(0,(document.location.href.lastIndexOf("/")) + 1));
      }

      changeSreenToEndOfGame(data){
        this.setState({
            screen: "endOfGame",
            gameResult:data.status,
            yCard:data.yoursCadr,
            opoonentCard:data.opponentsCard
          })
      }


      sendInfoToServer(info){
        ioConn.emit("ChoosenCard", { CardID: info });
        this.setState({
            showBigCard: info,
            screen: "duringTheGame"
        })
    }

    displayBigCard() {
        return (
        <svg className="svgicon centeredIcon " xmlns="http://www.w3.org/2000/svg " viewBox="0 0 32 32 "><path d={this.state.mas[this.state.showBigCard]}></path>
            </svg>
       
        )
      }
    //   className="finalCards"
      displayEndOfGameScreen() {
      return( <div className="resultGameBlock">
       <strong className="finalText">{this.state.gameResult} You have chosen this card.</strong>
          {/* <strong className="finalText">You have chosen this card.</strong> */}
       
          <svg className="finalCards" xmlns="http://www.w3.org/2000/svg " viewBox="0 0 32 32 "><path d={this.state.mas[this.state.yCard]}></path>
            </svg>
            
          <strong className="finalText"> And your opponent have chosen this card.</strong>
       
          <svg  className="finalCards" xmlns="http://www.w3.org/2000/svg " viewBox="0 0 32 32 "><path d={this.state.mas[this.state.opoonentCard]}></path>
            </svg>
            
          <div className="finalPageButtons">
          <div className="repeatButton" onClick={() => this.repeatGame()}>Repeat game</div>
          <div className="leaveButton" onClick={() => this.leaveGame()}>Leave this room</div>
          </div>
      </div>)
      }
     

    render() {
        if(this.state.showBigCard =="false"){
        var t =this.state.mas.map( (item, i)=> {
               return<div className="cart" key={i} onClick={() => this.sendInfoToServer(i)}><svg className="svgicon " xmlns="http://www.w3.org/2000/svg " viewBox="0 0 32 32 "><path d={item}></path>
               </svg>
            </div>
        })
        return (<div className="playersPart">
         
            <div className="cards">
                {
                  t  
                }
             
            </div>
            </div>
        )}else{
            if (this.state.screen == "endOfGame"){
                return this.displayEndOfGameScreen()
            }else{
                return this.displayBigCard()
            }
        }

        
    }
}


export default Cards
